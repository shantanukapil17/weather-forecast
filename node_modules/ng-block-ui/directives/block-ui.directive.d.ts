import { OnInit, OnDestroy, ComponentFactoryResolver, ViewContainerRef, TemplateRef, Renderer2 } from '@angular/core';
import { BlockUIInstanceService } from '../services/block-ui-instance.service';
import { BlockUIService } from '../services/block-ui.service';
import * as i0 from "@angular/core";
export declare class BlockUIDirective implements OnInit, OnDestroy {
    private blockUIService;
    private blockUIInstanceService;
    private viewRef;
    private templateRef;
    private renderer;
    private componentFactoryResolver;
    private blockUIComponentRef;
    blockTarget: string;
    message: any;
    template: any;
    delayStart: any;
    delayStop: any;
    set blockUI(name: any);
    set blockUIMessage(message: any);
    set blockUITemplate(template: any);
    set blockUIDelayStart(delayStart: any);
    set blockUIDelayStop(delayStop: any);
    constructor(blockUIService: BlockUIService, blockUIInstanceService: BlockUIInstanceService, viewRef: ViewContainerRef, templateRef: TemplateRef<any>, renderer: Renderer2, componentFactoryResolver: ComponentFactoryResolver);
    ngOnInit(): void;
    private isComponentInTemplate;
    private getParentElement;
    private findContentNode;
    private createComponent;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<BlockUIDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<BlockUIDirective, "[blockUI]", never, { "blockUI": "blockUI"; "blockUIMessage": "blockUIMessage"; "blockUITemplate": "blockUITemplate"; "blockUIDelayStart": "blockUIDelayStart"; "blockUIDelayStop": "blockUIDelayStop"; }, {}, never, never, false>;
}
